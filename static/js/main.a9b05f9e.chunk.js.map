{"version":3,"sources":["components/Container/Container.module.scss","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","wrapper","map","option","feedbackBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","statisticsItem","Section","title","children","section","sectionTitle","protoType","PropTypes","node","string","Notification","message","Container","container","App","state","countFeedbackHandler","value","setState","prevState","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","arrayOfValues","reduce","acc","this","keys","Object","values","positivePercent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJACAA,EAAOC,QAAU,CAAC,UAAY,+B,6JCqBfC,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAEC,QAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEI,YAEbC,QAAS,kBAAMP,EAAgB,GAAD,OAAIK,KAHpC,SAKGA,GAHIA,S,gBCeEG,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIZ,UAAWC,IAAEY,eAAjB,UACE,qBAAIb,UAAWC,IAAEa,eAAjB,mBAAwCN,KACxC,qBAAIR,UAAWC,IAAEa,eAAjB,sBAA2CL,KAC3C,qBAAIT,UAAWC,IAAEa,eAAjB,kBAAuCJ,KACvC,qBAAIV,UAAWC,IAAEa,eAAjB,oBAAyCH,KACzC,qBAAIX,UAAWC,IAAEa,eAAjB,gCACsBF,EADtB,W,gCCNEG,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASjB,UAAWC,IAAEiB,QAAtB,UACE,oBAAIlB,UAAWC,IAAEkB,aAAjB,SAAgCH,IAC/BC,MAILF,EAAQK,UAAY,CAClBH,SAAUI,IAAUC,KACpBN,MAAOK,IAAUE,QAGJR,QCPAS,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,iBCS3BC,EARG,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAH,OAChB,qBAAKjB,UAAWC,IAAE0B,UAAlB,SAA8BV,KCyDjBW,E,4MApDbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,qBAAuB,SAAAC,GACrB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAQE,EAAUF,GAAS,O,EAIhCG,gCAAkC,SAAC1B,EAAMG,GAAP,OAChCwB,KAAKC,MAAO5B,EAAOG,EAAS,M,EAE9B0B,mBAAqB,SAAAC,GAAa,OAChCA,EAAcC,QAAO,SAACC,EAAKT,GAAN,OAAgBS,EAAMT,IAAO,I,4CAEpD,WAAU,IAAD,EACwBU,KAAKZ,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBgC,EAAOC,OAAOD,KAAKD,KAAKZ,OACxBe,EAASD,OAAOC,OAAOH,KAAKZ,OAC5BlB,EAAQ8B,KAAKJ,mBAAmBO,GAChCC,EAAkBJ,KAAKP,gCAAgC1B,EAAMG,GAEnE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAAS4C,EACT3C,gBAAiB0C,KAAKX,yBAI1B,cAAC,EAAD,CAASd,MAAM,aAAf,SACGL,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBiC,IAGtB,cAAC,EAAD,CAAcpB,QAAQ,+B,GA7ChBqB,a,YCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BxD,EAAOC,QAAU,CAAC,QAAU,mC","file":"static/js/main.a9b05f9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__312HT\"};","import s from './FeedbackOptions.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.wrapper}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.feedbackBtn}\r\n        key={option}\r\n        onClick={() => onLeaveFeedback(`${option}`)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from './Statistics.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={s.statisticsList}>\r\n    <li className={s.statisticsItem}>Good: {good}</li>\r\n    <li className={s.statisticsItem}>Neutral: {neutral}</li>\r\n    <li className={s.statisticsItem}>Bad: {bad}</li>\r\n    <li className={s.statisticsItem}>Total: {total}</li>\r\n    <li className={s.statisticsItem}>\r\n      Positive feedback: {positivePercentage}%\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.scss';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={s.section}>\r\n    <h2 className={s.sectionTitle}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.protoType = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Container.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport Container from './components/Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedbackHandler = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countPositiveFeedbackPercentage = (good, total) =>\n    Math.round((good / total) * 100);\n\n  countTotalFeedback = arrayOfValues =>\n    arrayOfValues.reduce((acc, value) => acc + value, 0);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const keys = Object.keys(this.state);\n    const values = Object.values(this.state);\n    const total = this.countTotalFeedback(values);\n    const positivePercent = this.countPositiveFeedbackPercentage(good, total);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keys}\n            onLeaveFeedback={this.countFeedbackHandler}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercent}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__2YG5s\"};"],"sourceRoot":""}